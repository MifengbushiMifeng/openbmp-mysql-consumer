-- MySQL dump 10.13  Distrib 5.6.33, for debian-linux-gnu (x86_64)
--
-- Host: 127.0.0.1    Database: openBMP
-- ------------------------------------------------------
-- Server version	5.5.5-10.2.9-MariaDB-10.2.9+maria~xenial

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `as_path_analysis`
--

DROP TABLE IF EXISTS `as_path_analysis`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `as_path_analysis` (
  `asn` int(10) unsigned NOT NULL,
  `asn_left` int(10) unsigned NOT NULL DEFAULT 0,
  `asn_right` int(10) unsigned NOT NULL DEFAULT 0,
  `rib_hash_id` char(32) NOT NULL,
  `prefix_len` int(10) unsigned NOT NULL,
  `prefix_bin` varbinary(16) NOT NULL,
  `isIPv4` bit(1) NOT NULL DEFAULT b'1',
  `isWithdrawn` bit(1) NOT NULL DEFAULT b'0',
  `timestamp` datetime(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  PRIMARY KEY (`rib_hash_id`,`asn`),
  KEY `idx_asn_left` (`asn_left`),
  KEY `idx_asn_right` (`asn_right`),
  KEY `idx_prefix_full` (`prefix_bin`,`prefix_len`),
  KEY `idx_withdrawn` (`isWithdrawn`),
  KEY `idx_asn` (`asn`),
  KEY `idx_ts` (`timestamp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY KEY (`rib_hash_id`)
PARTITIONS 48;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `bgp_nexthop`
--

DROP TABLE IF EXISTS `bgp_nexthop`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `bgp_nexthop` (
  `nexthop` varchar(46) NOT NULL,
  `ls_prefix_hash_id` char(32) DEFAULT NULL,
  `ls_prefix` varchar(46) DEFAULT NULL,
  `ls_prefix_len` tinyint(3) unsigned DEFAULT NULL,
  `ls_src_node_hash_id` char(32) DEFAULT NULL,
  `ls_peer_hash_id` char(32) DEFAULT NULL,
  `ls_area_id` varchar(46) DEFAULT NULL,
  `ls_metric` int(11) DEFAULT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  PRIMARY KEY (`nexthop`),
  KEY `idx_prefix_hash_id` (`ls_prefix_hash_id`) USING BTREE,
  KEY `idx_nexthop` (`nexthop`) USING BTREE
) ENGINE=MEMORY DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `bgp_peers`
--

DROP TABLE IF EXISTS `bgp_peers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `bgp_peers` (
  `hash_id` char(32) NOT NULL,
  `router_hash_id` char(32) NOT NULL,
  `peer_rd` varchar(32) NOT NULL,
  `isIPv4` tinyint(3) unsigned NOT NULL,
  `peer_addr` varchar(40) NOT NULL,
  `name` varchar(200) DEFAULT NULL,
  `peer_bgp_id` varchar(15) NOT NULL,
  `peer_as` int(10) unsigned NOT NULL,
  `state` tinyint(4) NOT NULL DEFAULT 1,
  `isL3VPNpeer` tinyint(4) NOT NULL DEFAULT 0,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `isPrePolicy` tinyint(4) DEFAULT 1,
  `geo_ip_start` varbinary(16) DEFAULT NULL,
  `local_ip` varchar(40) NOT NULL,
  `local_bgp_id` varchar(15) NOT NULL,
  `local_port` int(10) unsigned NOT NULL,
  `local_hold_time` int(10) unsigned NOT NULL,
  `local_asn` int(10) unsigned NOT NULL,
  `remote_port` int(10) unsigned NOT NULL,
  `remote_hold_time` int(10) unsigned NOT NULL,
  `sent_capabilities` varchar(4096) DEFAULT NULL,
  `recv_capabilities` varchar(4096) DEFAULT NULL,
  `bmp_reason` tinyint(4) DEFAULT NULL,
  `bgp_err_code` int(10) unsigned DEFAULT NULL,
  `bgp_err_subcode` int(10) unsigned DEFAULT NULL,
  `error_text` varchar(255) DEFAULT NULL,
  `isLocRib` tinyint(4) NOT NULL DEFAULT 0,
  `isLocRibFiltered` tinyint(4) NOT NULL DEFAULT 0,
  `table_name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`hash_id`,`router_hash_id`),
  KEY `idx_addr` (`peer_addr`),
  KEY `idx_name` (`name`),
  KEY `idx_main` (`peer_rd`,`peer_addr`),
  KEY `idx_as` (`peer_as`),
  KEY `idx_router_hash` (`router_hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`%`*/ /*!50003 TRIGGER ins_bgp_peers BEFORE INSERT ON bgp_peers
    FOR EACH ROW
        BEGIN
            declare geo_ip_start varbinary(16);
            declare routerName varchar(128);
            declare routerIP varchar(46);


        IF (new.peer_addr = "0.0.0.0" AND new.peer_bgp_id = "0.0.0.0") THEN
             SELECT r.name,r.ip_address INTO routerName,routerIP FROM routers r where new.router_hash_id = r.hash_id;
             set new.name = routerName;

            SELECT ip_start INTO geo_ip_start
               FROM geo_ip
               WHERE ip_end >= inet6_aton(routerIP)
                      and ip_start <= inet6_aton(routerIP) and addr_type = if (routerIP like "%.%", 'ipv4', 'ipv6')
                ORDER BY ip_end limit 1;

        ELSE
           SELECT ip_start INTO geo_ip_start
               FROM geo_ip
               WHERE ip_end >= inet6_aton(new.peer_addr)
                      and ip_start <= inet6_aton(new.peer_addr) and addr_type = if (new.isIPv4 = 1, 'ipv4', 'ipv6')
                ORDER BY ip_end limit 1;

        END IF;

        set new.geo_ip_start = geo_ip_start;

        
        IF (new.state = 0) THEN
            INSERT IGNORE INTO peer_down_events (peer_hash_id,bmp_reason,bgp_err_code,bgp_err_subcode,error_text,timestamp)
                VALUES (new.hash_id,new.bmp_reason,new.bgp_err_code,new.bgp_err_subcode,new.error_text,new.timestamp);

        ELSE
            INSERT IGNORE INTO peer_up_events (peer_hash_id,local_ip,local_bgp_id,local_port,local_hold_time,local_asn,remote_port,remote_hold_time,
                         sent_capabilities,recv_capabilities,timestamp)
                VALUES (new.hash_id,new.local_ip,new.local_bgp_id,new.local_port,new.local_hold_time,new.local_asn,new.remote_port,new.remote_hold_time,
                      new.sent_capabilities,new.recv_capabilities,new.timestamp);
        END IF;

        END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`%`*/ /*!50003 TRIGGER upd_bgp_peers BEFORE UPDATE ON bgp_peers
    FOR EACH ROW
        BEGIN
            declare geo_ip_start varbinary(16);
            declare routerName varchar(128);
            declare routerIP varchar(46);

        IF (new.peer_addr = "0.0.0.0" AND new.peer_bgp_id = "0.0.0.0") THEN
             SELECT r.name,r.ip_address INTO routerName,routerIP FROM routers r where new.router_hash_id = r.hash_id;
             set new.name = routerName;

            SELECT ip_start INTO geo_ip_start
               FROM geo_ip
               WHERE ip_end >= inet6_aton(routerIP)
                      and ip_start <= inet6_aton(routerIP) and addr_type = if (routerIP like "%.%", 'ipv4', 'ipv6')
                ORDER BY ip_end limit 1;

        ELSE
           SELECT ip_start INTO geo_ip_start
               FROM geo_ip
               WHERE ip_end >= inet6_aton(new.peer_addr)
                      and ip_start <= inet6_aton(new.peer_addr) and addr_type = if (new.isIPv4 = 1, 'ipv4', 'ipv6')
                ORDER BY ip_end limit 1;

        END IF;

        set new.geo_ip_start = geo_ip_start;

        END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `collectors`
--

DROP TABLE IF EXISTS `collectors`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `collectors` (
  `hash_id` char(32) NOT NULL,
  `state` enum('up','down') DEFAULT NULL,
  `admin_id` varchar(64) NOT NULL,
  `routers` varchar(4096) DEFAULT NULL,
  `router_count` int(11) NOT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `name` varchar(200) DEFAULT NULL,
  `ip_address` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `community_analysis`
--

DROP TABLE IF EXISTS `community_analysis`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `community_analysis` (
  `community` varchar(22) NOT NULL,
  `part1` int(10) unsigned NOT NULL DEFAULT 0,
  `part2` int(10) unsigned NOT NULL DEFAULT 0,
  `path_attr_hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`community`,`peer_hash_id`,`path_attr_hash_id`),
  KEY `idx_community` (`community`),
  KEY `idx_part1` (`part1`),
  KEY `idx_part2` (`part2`),
  KEY `idx_peer_hash` (`peer_hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8
 PARTITION BY KEY (`peer_hash_id`)
PARTITIONS 48;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_active_asns`
--

DROP TABLE IF EXISTS `gen_active_asns`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_active_asns` (
  `asn` int(10) unsigned NOT NULL,
  `old` bit(1) NOT NULL DEFAULT b'0',
  PRIMARY KEY (`asn`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_asn_stats`
--

DROP TABLE IF EXISTS `gen_asn_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_asn_stats` (
  `asn` int(10) unsigned NOT NULL,
  `isTransit` tinyint(4) NOT NULL DEFAULT 0,
  `isOrigin` tinyint(4) NOT NULL DEFAULT 0,
  `transit_v4_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `transit_v6_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `origin_v4_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `origin_v6_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `repeats` bigint(20) unsigned NOT NULL DEFAULT 0,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `transit_v4_change` decimal(8,5) NOT NULL DEFAULT 0.00000,
  `transit_v6_change` decimal(8,5) NOT NULL DEFAULT 0.00000,
  `origin_v4_change` decimal(8,5) NOT NULL DEFAULT 0.00000,
  `origin_v6_change` decimal(8,5) NOT NULL DEFAULT 0.00000,
  PRIMARY KEY (`asn`,`timestamp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`localhost`*/ /*!50003 TRIGGER ins_gen_asn_stats BEFORE INSERT ON gen_asn_stats
FOR EACH ROW
    BEGIN
        declare last_ts timestamp;
        declare v4_o_count bigint(20) unsigned default 0;
        declare v6_o_count bigint(20) unsigned default 0;
        declare v4_t_count bigint(20) unsigned default 0;
        declare v6_t_count bigint(20) unsigned default 0;
        SET sql_mode = '';
        SELECT transit_v4_prefixes,transit_v6_prefixes,origin_v4_prefixes,
                    origin_v6_prefixes,timestamp
            INTO v4_t_count,v6_t_count,v4_o_count,v6_o_count,last_ts
            FROM gen_asn_stats WHERE asn = new.asn 
            ORDER BY timestamp DESC limit 1;
        IF (new.transit_v4_prefixes = v4_t_count AND new.transit_v6_prefixes = v6_t_count
                AND new.origin_v4_prefixes = v4_o_count AND new.origin_v6_prefixes = v6_o_count) THEN
            set new.timestamp = last_ts;
        ELSE
    IF (v4_t_count > 0 AND new.transit_v4_prefixes > 0 AND new.transit_v4_prefixes != v4_t_count)  THEN
      SET new.transit_v4_change = cast(if(new.transit_v4_prefixes > v4_t_count,
                                   new.transit_v4_prefixes / v4_t_count,
                                   v4_t_count / new.transit_v4_prefixes * -1) as decimal(8,5));
    END IF;
    IF (v6_t_count > 0 AND new.transit_v6_prefixes > 0 AND new.transit_v6_prefixes != v6_t_count) THEN
      SET new.transit_v6_change = cast(if(new.transit_v6_prefixes > v6_t_count,
                                   new.transit_v6_prefixes / v6_t_count,
                                   v6_t_count / new.transit_v6_prefixes * -1) as decimal(8,5));
    END IF;
    IF (v4_o_count > 0 AND new.origin_v4_prefixes > 0 AND new.origin_v4_prefixes != v4_o_count) THEN
      SET new.origin_v4_change = cast(if(new.origin_v4_prefixes > v4_o_count,
                                   new.origin_v4_prefixes / v4_o_count,
                                   v4_o_count / new.origin_v4_prefixes * -1) as decimal(8,5));
    END IF;
    IF (v6_o_count > 0 AND new.origin_v6_prefixes > 0 AND new.origin_v6_prefixes != v6_o_count) THEN
      SET new.origin_v6_change = cast(if(new.origin_v6_prefixes > v6_o_count,
                                   new.origin_v6_prefixes / v6_o_count,
                                   v6_o_count / new.origin_v6_prefixes * -1) as decimal(8,5));
    END IF;
        END IF;
    END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `gen_asn_stats_last`
--

DROP TABLE IF EXISTS `gen_asn_stats_last`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_asn_stats_last` (
  `asn` int(10) unsigned NOT NULL,
  `isTransit` tinyint(4) NOT NULL DEFAULT 0,
  `isOrigin` tinyint(4) NOT NULL DEFAULT 0,
  `transit_v4_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `transit_v6_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `origin_v4_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `origin_v6_prefixes` bigint(20) unsigned NOT NULL DEFAULT 0,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`asn`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_chg_stats_byasn`
--

DROP TABLE IF EXISTS `gen_chg_stats_byasn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_chg_stats_byasn` (
  `interval_time` datetime(6) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `origin_as` int(10) unsigned NOT NULL,
  `updates` int(10) unsigned NOT NULL DEFAULT 0,
  `withdraws` int(10) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`interval_time`,`peer_hash_id`,`origin_as`),
  KEY `idx_interval` (`interval_time`),
  KEY `idx_peer_hash_id` (`peer_hash_id`),
  KEY `idx_origin_as` (`origin_as`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY RANGE  COLUMNS(`interval_time`)
(
 PARTITION `p2017_10` VALUES LESS THAN ('2017-11-01') ENGINE = InnoDB,
 PARTITION `p2017_11` VALUES LESS THAN ('2017-12-01') ENGINE = InnoDB,
 PARTITION `p2017_12` VALUES LESS THAN ('2018-01-01') ENGINE = InnoDB,
 PARTITION `p2018_01` VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION `p2018_02` VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION `p2018_03` VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION `p2018_04` VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_chg_stats_bypeer`
--

DROP TABLE IF EXISTS `gen_chg_stats_bypeer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_chg_stats_bypeer` (
  `interval_time` datetime(6) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `updates` int(10) unsigned NOT NULL DEFAULT 0,
  `withdraws` int(10) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`interval_time`,`peer_hash_id`),
  KEY `idx_interval` (`interval_time`),
  KEY `idx_peer_hash_id` (`peer_hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY RANGE  COLUMNS(`interval_time`)
(
 PARTITION `p2017_10` VALUES LESS THAN ('2017-11-01') ENGINE = InnoDB,
 PARTITION `p2017_11` VALUES LESS THAN ('2017-12-01') ENGINE = InnoDB,
 PARTITION `p2017_12` VALUES LESS THAN ('2018-01-01') ENGINE = InnoDB,
 PARTITION `p2018_01` VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION `p2018_02` VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION `p2018_03` VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION `p2018_04` VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_chg_stats_byprefix`
--

DROP TABLE IF EXISTS `gen_chg_stats_byprefix`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_chg_stats_byprefix` (
  `interval_time` datetime(6) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `prefix` varchar(46) NOT NULL,
  `prefix_len` tinyint(3) unsigned NOT NULL,
  `updates` int(10) unsigned NOT NULL DEFAULT 0,
  `withdraws` int(10) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`interval_time`,`peer_hash_id`,`prefix`,`prefix_len`),
  KEY `idx_interval` (`interval_time`),
  KEY `idx_peer_hash_id` (`peer_hash_id`),
  KEY `idx_prefix_full` (`prefix`,`prefix_len`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=4
 PARTITION BY RANGE  COLUMNS(`interval_time`)
(
 PARTITION `p2017_10` VALUES LESS THAN ('2017-11-01') ENGINE = InnoDB,
 PARTITION `p2017_11` VALUES LESS THAN ('2017-12-01') ENGINE = InnoDB,
 PARTITION `p2017_12` VALUES LESS THAN ('2018-01-01') ENGINE = InnoDB,
 PARTITION `p2018_01` VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION `p2018_02` VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION `p2018_03` VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION `p2018_04` VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_l3vpn_chg_stats_bypeer`
--

DROP TABLE IF EXISTS `gen_l3vpn_chg_stats_bypeer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_l3vpn_chg_stats_bypeer` (
  `interval_time` datetime(6) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `updates` int(10) unsigned NOT NULL DEFAULT 0,
  `withdraws` int(10) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`interval_time`,`peer_hash_id`),
  KEY `idx_interval` (`interval_time`),
  KEY `idx_peer_hash_id` (`peer_hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY RANGE  COLUMNS(`interval_time`)
(PARTITION `p2017_10` VALUES LESS THAN ('2017-11-01') ENGINE = InnoDB,
 PARTITION `p2017_11` VALUES LESS THAN ('2017-12-01') ENGINE = InnoDB,
 PARTITION `p2017_12` VALUES LESS THAN ('2018-01-01') ENGINE = InnoDB,
 PARTITION `p2018_01` VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION `p2018_02` VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION `p2018_03` VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION `p2018_04` VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_prefix_validation`
--

DROP TABLE IF EXISTS `gen_prefix_validation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_prefix_validation` (
  `prefix` varbinary(16) NOT NULL,
  `isIPv4` tinyint(4) NOT NULL,
  `prefix_len` tinyint(3) unsigned NOT NULL DEFAULT 0,
  `recv_origin_as` int(10) unsigned NOT NULL,
  `rpki_origin_as` int(10) unsigned DEFAULT NULL,
  `irr_origin_as` int(10) unsigned DEFAULT NULL,
  `irr_source` varchar(32) DEFAULT NULL,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp(),
  `prefix_bits` varchar(128) NOT NULL,
  PRIMARY KEY (`prefix`,`prefix_len`,`recv_origin_as`),
  KEY `idx_origin` (`recv_origin_as`) USING HASH,
  KEY `idx_prefix` (`prefix`) USING BTREE,
  KEY `idx_prefix_full` (`prefix`,`prefix_len`) USING HASH,
  KEY `idx_prefix_bits` (`prefix_bits`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY HASH (`prefix_len`)
PARTITIONS 24;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_whois_asn`
--

DROP TABLE IF EXISTS `gen_whois_asn`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_whois_asn` (
  `asn` int(10) unsigned NOT NULL,
  `as_name` varchar(128) DEFAULT NULL,
  `org_id` varchar(64) DEFAULT NULL,
  `org_name` varchar(255) DEFAULT NULL,
  `remarks` text DEFAULT NULL,
  `address` varchar(255) DEFAULT NULL,
  `city` varchar(64) DEFAULT NULL,
  `state_prov` varchar(32) DEFAULT NULL,
  `postal_code` varchar(32) DEFAULT NULL,
  `country` varchar(24) DEFAULT NULL,
  `raw_output` text DEFAULT NULL,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `source` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`asn`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `gen_whois_route`
--

DROP TABLE IF EXISTS `gen_whois_route`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `gen_whois_route` (
  `prefix` varbinary(16) NOT NULL,
  `prefix_len` int(10) unsigned NOT NULL DEFAULT 0,
  `descr` blob DEFAULT NULL,
  `origin_as` int(11) NOT NULL,
  `source` varchar(32) NOT NULL,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`prefix`,`prefix_len`,`origin_as`),
  KEY `idx_origin_as` (`origin_as`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `geo_ip`
--

DROP TABLE IF EXISTS `geo_ip`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `geo_ip` (
  `addr_type` enum('ipv4','ipv6') NOT NULL,
  `ip_start` varbinary(16) NOT NULL,
  `ip_end` varbinary(16) NOT NULL,
  `country` char(2) NOT NULL,
  `stateprov` varchar(80) NOT NULL,
  `city` varchar(80) NOT NULL,
  `latitude` float NOT NULL,
  `longitude` float NOT NULL,
  `timezone_offset` float NOT NULL,
  `timezone_name` varchar(64) NOT NULL,
  `isp_name` varchar(128) NOT NULL,
  `connection_type` enum('dialup','isdn','cable','dsl','fttx','wireless') DEFAULT NULL,
  `organization_name` varchar(128) DEFAULT NULL,
  PRIMARY KEY (`ip_start`),
  KEY `idx_city` (`city`),
  KEY `idx_stateprov` (`stateprov`),
  KEY `idx_country` (`country`),
  KEY `idx_addr_type` (`addr_type`),
  KEY `idx_ip_end` (`ip_end`),
  KEY `idx_ip_range` (`ip_start`,`ip_end`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `geo_location`
--

DROP TABLE IF EXISTS `geo_location`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `geo_location` (
  `country` varchar(50) NOT NULL,
  `city` varchar(50) NOT NULL,
  `latitude` float NOT NULL,
  `longitude` float NOT NULL,
  PRIMARY KEY (`country`,`city`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `l3vpn_log`
--

DROP TABLE IF EXISTS `l3vpn_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `l3vpn_log` (
  `peer_hash_id` char(32) NOT NULL,
  `type` enum('withdrawn','changed') NOT NULL,
  `prefix` varchar(40) NOT NULL,
  `rd` varchar(30) NOT NULL,
  `prefix_len` int(10) unsigned NOT NULL,
  `timestamp` datetime(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `path_attr_hash_id` char(32) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`,`peer_hash_id`,`timestamp`),
  KEY `idx_prefix` (`prefix`,`prefix_len`),
  KEY `idx_rd` (`rd`),
  KEY `idx_type` (`type`),
  KEY `idx_ts` (`timestamp`),
  KEY `idx_peer_hash_id` (`peer_hash_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8
 PARTITION BY RANGE  COLUMNS(`timestamp`)
SUBPARTITION BY KEY (`peer_hash_id`)
SUBPARTITIONS 32
(
 PARTITION `p2017_10` VALUES LESS THAN ('2017-11-01') ENGINE = InnoDB,
 PARTITION `p2017_11` VALUES LESS THAN ('2017-12-01') ENGINE = InnoDB,
 PARTITION `p2017_12` VALUES LESS THAN ('2018-01-01') ENGINE = InnoDB,
 PARTITION `p2018_01` VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION `p2018_02` VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION `p2018_03` VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION `p2018_04` VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `l3vpn_rib`
--

DROP TABLE IF EXISTS `l3vpn_rib`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `l3vpn_rib` (
  `hash_id` char(32) NOT NULL,
  `path_attr_hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `isIPv4` tinyint(4) NOT NULL,
  `origin_as` int(10) unsigned NOT NULL,
  `rd` varchar(30) NOT NULL,
  `prefix` varchar(40) NOT NULL,
  `prefix_len` int(10) unsigned NOT NULL,
  `prefix_bin` varbinary(16) NOT NULL,
  `prefix_bcast_bin` varbinary(16) NOT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6),
  `first_added_timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6),
  `isWithdrawn` bit(1) NOT NULL DEFAULT b'0',
  `prefix_bits` varchar(128) DEFAULT NULL,
  `path_id` int(10) unsigned DEFAULT NULL,
  `labels` varchar(255) DEFAULT NULL,
  `isPrePolicy` tinyint(4) NOT NULL DEFAULT 1,
  `isAdjRibIn` tinyint(4) NOT NULL DEFAULT 1,
  PRIMARY KEY (`hash_id`,`peer_hash_id`,`isPrePolicy`,`isAdjRibIn`),
  KEY `idx_peer_id` (`peer_hash_id`),
  KEY `idx_path_id` (`path_attr_hash_id`),
  KEY `idx_prefix` (`prefix`),
  KEY `idx_rd` (`rd`),
  KEY `idx_prefix_len` (`prefix_len`),
  KEY `idx_prefix_bin` (`prefix_bin`),
  KEY `idx_addr_type` (`isIPv4`),
  KEY `idx_isWithdrawn` (`isWithdrawn`),
  KEY `idx_origin_as` (`origin_as`),
  KEY `idx_ts` (`timestamp`),
  KEY `idx_prefix_bits` (`prefix_bits`),
  KEY `idx_first_added_ts` (`first_added_timestamp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC
 PARTITION BY KEY (`peer_hash_id`)
PARTITIONS 48;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`%`*/ /*!50003 TRIGGER l3vpn_rib_pre_update BEFORE UPDATE on l3vpn_rib
  FOR EACH ROW
  BEGIN
      
      IF ( @TRIGGER_DISABLED is null OR @TRIGGER_DISABLED = FALSE ) THEN

        
        IF (new.hash_id = old.hash_id AND new.peer_hash_id = old.peer_hash_id) THEN
            IF (new.isWithdrawn = False) THEN
              IF (old.path_attr_hash_id != new.path_attr_hash_id AND old.path_attr_hash_id != '') THEN
                   
                    INSERT IGNORE INTO l3vpn_log (type,rd,prefix,prefix_len,path_attr_hash_id,peer_hash_id,timestamp)
                                VALUES ('changed', old.rd, old.prefix,old.prefix_len,old.path_attr_hash_id,old.peer_hash_id,
                                        old.timestamp);
              END IF;

              
              IF (old.isWithdrawn = True AND old.timestamp < date_sub(new.timestamp, INTERVAL 6 HOUR)) THEN
                  SET new.first_added_timestamp = current_timestamp(6);
              END IF;

            ELSE
                
                INSERT IGNORE INTO l3vpn_log
                       (type,rd,prefix,prefix_len,peer_hash_id,path_attr_hash_id,timestamp)
                           VALUES ('withdrawn', old.rd, old.prefix,old.prefix_len,old.peer_hash_id,
                                   old.path_attr_hash_id,new.timestamp);
            END IF;       
            
        END IF;
      END IF;
  END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `ls_links`
--

DROP TABLE IF EXISTS `ls_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ls_links` (
  `hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `path_attr_hash_id` char(32) NOT NULL,
  `id` bigint(20) unsigned NOT NULL,
  `mt_id` int(10) unsigned DEFAULT 0,
  `interface_addr` varchar(46) NOT NULL,
  `neighbor_addr` varchar(46) NOT NULL,
  `isIPv4` tinyint(4) NOT NULL,
  `protocol` enum('IS-IS_L1','IS-IS_L2','OSPFv2','Direct','Static','OSPFv3','EPE','') DEFAULT NULL,
  `local_link_id` int(10) unsigned NOT NULL,
  `remote_link_id` int(10) unsigned NOT NULL,
  `local_node_hash_id` char(32) NOT NULL,
  `remote_node_hash_id` char(32) NOT NULL,
  `admin_group` int(11) NOT NULL,
  `max_link_bw` int(10) unsigned DEFAULT 0,
  `max_resv_bw` int(10) unsigned DEFAULT 0,
  `unreserved_bw` varchar(100) DEFAULT NULL,
  `te_def_metric` int(10) unsigned NOT NULL,
  `protection_type` varchar(60) DEFAULT NULL,
  `mpls_proto_mask` enum('LDP','RSVP-TE','') DEFAULT NULL,
  `igp_metric` int(10) unsigned NOT NULL,
  `srlg` varchar(128) NOT NULL,
  `name` varchar(255) NOT NULL,
  `isWithdrawn` bit(1) NOT NULL DEFAULT b'0',
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `local_igp_router_id` varchar(46) NOT NULL,
  `local_router_id` varchar(46) NOT NULL,
  `local_asn` int(10) unsigned NOT NULL,
  `remote_igp_router_id` varchar(46) NOT NULL,
  `remote_router_id` varchar(46) NOT NULL,
  `remote_asn` int(10) unsigned NOT NULL,
  `peer_node_sid` varchar(128) NOT NULL,
  `sr_adjacency_sids` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`hash_id`,`peer_hash_id`,`local_node_hash_id`),
  KEY `idx_local_router_id` (`local_node_hash_id`),
  KEY `idx_path_attr_hash_id` (`path_attr_hash_id`),
  KEY `idx_remote_router_id` (`remote_node_hash_id`),
  KEY `idx_peer_id` (`peer_hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY KEY (`peer_hash_id`);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ls_nodes`
--

DROP TABLE IF EXISTS `ls_nodes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ls_nodes` (
  `hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `path_attr_hash_id` char(32) NOT NULL,
  `id` bigint(20) unsigned NOT NULL,
  `asn` int(10) unsigned NOT NULL,
  `bgp_ls_id` int(10) unsigned NOT NULL,
  `igp_router_id` varchar(46) NOT NULL,
  `ospf_area_id` varchar(16) NOT NULL,
  `protocol` enum('IS-IS_L1','IS-IS_L2','OSPFv2','Direct','Static','OSPFv3','') DEFAULT NULL,
  `router_id` varchar(46) NOT NULL,
  `isis_area_id` varchar(46) NOT NULL,
  `flags` varchar(20) NOT NULL,
  `name` varchar(255) NOT NULL,
  `isWithdrawn` bit(1) NOT NULL DEFAULT b'0',
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `mt_ids` varchar(128) DEFAULT NULL,
  `sr_capabilities` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`hash_id`,`peer_hash_id`),
  KEY `idx_router_id` (`router_id`),
  KEY `idx_path_attr_hash_id` (`path_attr_hash_id`),
  KEY `idx_igp_router_id` (`igp_router_id`),
  KEY `idx_peer_id` (`peer_hash_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY KEY (`peer_hash_id`);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ls_prefixes`
--

DROP TABLE IF EXISTS `ls_prefixes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ls_prefixes` (
  `hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `path_attr_hash_id` char(32) NOT NULL,
  `id` bigint(20) unsigned NOT NULL,
  `local_node_hash_id` char(32) NOT NULL,
  `mt_id` int(10) unsigned NOT NULL,
  `protocol` enum('IS-IS_L1','IS-IS_L2','OSPFv2','Direct','Static','OSPFv3','') DEFAULT NULL,
  `prefix` varchar(46) NOT NULL,
  `prefix_len` int(8) unsigned NOT NULL,
  `prefix_bin` varbinary(16) NOT NULL,
  `prefix_bcast_bin` varbinary(16) NOT NULL,
  `ospf_route_type` enum('Intra','Inter','Ext-1','Ext-2','NSSA-1','NSSA-2','') DEFAULT NULL,
  `igp_flags` varchar(20) NOT NULL,
  `isIPv4` tinyint(4) NOT NULL,
  `route_tag` int(10) unsigned DEFAULT NULL,
  `ext_route_tag` bigint(20) unsigned DEFAULT NULL,
  `metric` int(10) unsigned NOT NULL,
  `ospf_fwd_addr` varchar(46) DEFAULT NULL,
  `isWithdrawn` bit(1) NOT NULL DEFAULT b'0',
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `sr_prefix_sids` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`hash_id`,`peer_hash_id`,`local_node_hash_id`),
  KEY `idx_local_router_id` (`local_node_hash_id`),
  KEY `idx_path_attr_hash_id` (`path_attr_hash_id`),
  KEY `idx_range_prefix_bin` (`prefix_bcast_bin`,`prefix_bin`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
 PARTITION BY KEY (`peer_hash_id`);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `path_attr_log`
--

DROP TABLE IF EXISTS `path_attr_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `path_attr_log` (
  `path_attr_hash_id` char(32) NOT NULL,
  `timestamp` datetime(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `peer_hash_id` char(32) NOT NULL DEFAULT '',
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `prefix` varchar(46) NOT NULL,
  `prefix_len` tinyint(3) unsigned NOT NULL,
  `origin_as` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`,`peer_hash_id`,`timestamp`),
  KEY `idx_ts` (`timestamp`),
  KEY `idx_peer_hash_id` (`peer_hash_id`),
  KEY `idx_prefix_full` (`prefix`,`prefix_len`),
  KEY `idx_prefix` (`prefix`),
  KEY `idx_origin` (`origin_as`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8
 PARTITION BY RANGE (to_days(`timestamp`))
(
 PARTITION `p2017_10_w3` VALUES LESS THAN (736992) ENGINE = InnoDB,
 PARTITION `p2017_10_w4` VALUES LESS THAN (736999) ENGINE = InnoDB,
 PARTITION `p2017_11_w1` VALUES LESS THAN (737006) ENGINE = InnoDB,
 PARTITION `p2017_11_w2` VALUES LESS THAN (737013) ENGINE = InnoDB,
 PARTITION `p2017_11_w3` VALUES LESS THAN (737023) ENGINE = InnoDB,
 PARTITION `p2017_11_w4` VALUES LESS THAN (737029) ENGINE = InnoDB,
 PARTITION `p2017_12_w1` VALUES LESS THAN (737036) ENGINE = InnoDB,
 PARTITION `p2017_12_w2` VALUES LESS THAN (737043) ENGINE = InnoDB,
 PARTITION `p2017_12_w3` VALUES LESS THAN (737053) ENGINE = InnoDB,
 PARTITION `p2017_12_w4` VALUES LESS THAN (737060) ENGINE = InnoDB,
 PARTITION `p2018_01_w1` VALUES LESS THAN (737067) ENGINE = InnoDB,
 PARTITION `p2018_01_w2` VALUES LESS THAN (737074) ENGINE = InnoDB,
 PARTITION `p2018_01_w3` VALUES LESS THAN (737084) ENGINE = InnoDB,
 PARTITION `p2018_01_w4` VALUES LESS THAN (737091) ENGINE = InnoDB,
 PARTITION `p2018_02_w1` VALUES LESS THAN (737098) ENGINE = InnoDB,
 PARTITION `p2018_02_w2` VALUES LESS THAN (737105) ENGINE = InnoDB,
 PARTITION `p2018_02_w3` VALUES LESS THAN (737115) ENGINE = InnoDB,
 PARTITION `p2018_02_w4` VALUES LESS THAN (737119) ENGINE = InnoDB,
 PARTITION `p2018_03_w1` VALUES LESS THAN (737126) ENGINE = InnoDB,
 PARTITION `p2018_03_w2` VALUES LESS THAN (737133) ENGINE = InnoDB,
 PARTITION `p2018_03_w3` VALUES LESS THAN (737143) ENGINE = InnoDB,
 PARTITION `p2018_03_w4` VALUES LESS THAN (737150) ENGINE = InnoDB,
 PARTITION `p2018_04_w1` VALUES LESS THAN (737157) ENGINE = InnoDB,
 PARTITION `p2018_04_w2` VALUES LESS THAN (737164) ENGINE = InnoDB,
 PARTITION `p2018_04_w3` VALUES LESS THAN (737174) ENGINE = InnoDB,
 PARTITION `p2018_04_w4` VALUES LESS THAN (737180) ENGINE = InnoDB,
 PARTITION `p2018_05_w1` VALUES LESS THAN (737187) ENGINE = InnoDB,
 PARTITION `p2018_05_w2` VALUES LESS THAN (737194) ENGINE = InnoDB,
 PARTITION `p2018_05_w3` VALUES LESS THAN (737204) ENGINE = InnoDB,
 PARTITION `p2018_05_w4` VALUES LESS THAN (737211) ENGINE = InnoDB,
 PARTITION `p2018_06_w1` VALUES LESS THAN (737218) ENGINE = InnoDB,
 PARTITION `p2018_06_w2` VALUES LESS THAN (737225) ENGINE = InnoDB,
 PARTITION `p2018_06_w3` VALUES LESS THAN (737235) ENGINE = InnoDB,
 PARTITION `p2018_06_w4` VALUES LESS THAN (737241) ENGINE = InnoDB,
 PARTITION `p2018_07_w1` VALUES LESS THAN (737248) ENGINE = InnoDB,
 PARTITION `p2018_07_w2` VALUES LESS THAN (737255) ENGINE = InnoDB,
 PARTITION `p2018_07_w3` VALUES LESS THAN (737265) ENGINE = InnoDB,
 PARTITION `p2018_07_w4` VALUES LESS THAN (737272) ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN MAXVALUE ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `path_attrs`
--

DROP TABLE IF EXISTS `path_attrs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `path_attrs` (
  `hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `origin` varchar(16) NOT NULL,
  `as_path` varchar(8192) NOT NULL,
  `as_path_count` int(8) unsigned DEFAULT NULL,
  `origin_as` int(10) unsigned DEFAULT NULL,
  `next_hop` varchar(40) DEFAULT NULL,
  `med` int(10) unsigned DEFAULT NULL,
  `local_pref` int(10) unsigned DEFAULT NULL,
  `aggregator` varchar(64) DEFAULT NULL,
  `community_list` varchar(4096) DEFAULT NULL,
  `ext_community_list` varchar(2048) DEFAULT NULL,
  `cluster_list` varchar(2048) DEFAULT NULL,
  `isAtomicAgg` tinyint(4) DEFAULT 0,
  `nexthop_isIPv4` tinyint(3) DEFAULT 1,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `originator_id` varchar(15) DEFAULT NULL,
  PRIMARY KEY (`hash_id`,`peer_hash_id`),
  KEY `idx_peer_hash_id` (`peer_hash_id`),
  KEY `idx_origin_as` (`origin_as`),
  KEY `idx_as_path_count` (`as_path_count`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC
 PARTITION BY KEY (`peer_hash_id`)
PARTITIONS 48;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `peer_down_events`
--

DROP TABLE IF EXISTS `peer_down_events`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `peer_down_events` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `peer_hash_id` char(32) NOT NULL,
  `bmp_reason` tinyint(4) DEFAULT NULL,
  `bgp_err_code` int(10) unsigned DEFAULT NULL,
  `bgp_err_subcode` int(10) unsigned DEFAULT NULL,
  `error_text` varchar(255) DEFAULT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  PRIMARY KEY (`id`,`peer_hash_id`),
  KEY `idx_error` (`peer_hash_id`,`bmp_reason`),
  KEY `idx_bgp_errors` (`bgp_err_code`,`bgp_err_subcode`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `peer_up_events`
--

DROP TABLE IF EXISTS `peer_up_events`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `peer_up_events` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `peer_hash_id` char(32) NOT NULL,
  `local_ip` varchar(40) NOT NULL,
  `local_bgp_id` varchar(15) NOT NULL,
  `local_port` int(10) unsigned NOT NULL,
  `local_hold_time` int(10) unsigned NOT NULL,
  `local_asn` int(10) unsigned NOT NULL,
  `remote_port` int(10) unsigned NOT NULL,
  `remote_hold_time` int(10) unsigned NOT NULL,
  `sent_capabilities` varchar(4096) DEFAULT NULL,
  `recv_capabilities` varchar(4096) DEFAULT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  PRIMARY KEY (`id`,`peer_hash_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `prefix_aspath`
--

DROP TABLE IF EXISTS `prefix_aspath`;
/*!50001 DROP VIEW IF EXISTS `prefix_aspath`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `prefix_aspath` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `Prefix`,
 1 AS `PrefixLen`,
 1 AS `Origin`,
 1 AS `AS_Path`,
 1 AS `NH`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `rib`
--

DROP TABLE IF EXISTS `rib`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rib` (
  `hash_id` char(32) NOT NULL,
  `path_attr_hash_id` char(32) NOT NULL,
  `peer_hash_id` char(32) NOT NULL,
  `isIPv4` tinyint(4) NOT NULL,
  `origin_as` int(10) unsigned NOT NULL,
  `prefix` varchar(40) NOT NULL,
  `prefix_len` int(10) unsigned NOT NULL,
  `prefix_bin` varbinary(16) NOT NULL,
  `prefix_bcast_bin` varbinary(16) NOT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6),
  `first_added_timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6),
  `isWithdrawn` bit(1) NOT NULL DEFAULT b'0',
  `prefix_bits` varchar(128) DEFAULT NULL,
  `path_id` int(10) unsigned DEFAULT NULL,
  `labels` varchar(255) DEFAULT NULL,
  `isPrePolicy` tinyint(4) NOT NULL DEFAULT 1,
  `isAdjRibIn` tinyint(4) NOT NULL DEFAULT 1,
  PRIMARY KEY (`hash_id`,`peer_hash_id`,`isPrePolicy`,`isAdjRibIn`),
  KEY `idx_peer_id` (`peer_hash_id`),
  KEY `idx_path_id` (`path_attr_hash_id`),
  KEY `idx_prefix` (`prefix`),
  KEY `idx_prefix_len` (`prefix_len`),
  KEY `idx_prefix_bin` (`prefix_bin`),
  KEY `idx_addr_type` (`isIPv4`),
  KEY `idx_isWithdrawn` (`isWithdrawn`),
  KEY `idx_origin_as` (`origin_as`),
  KEY `idx_ts` (`timestamp`),
  KEY `idx_prefix_bits` (`prefix_bits`),
  KEY `idx_first_added_ts` (`first_added_timestamp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC
 PARTITION BY KEY (`peer_hash_id`)
PARTITIONS 48;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`%`*/ /*!50003 TRIGGER rib_pre_update BEFORE UPDATE on rib
  FOR EACH ROW
  BEGIN
      
      IF ( @TRIGGER_DISABLED is null OR @TRIGGER_DISABLED = FALSE ) THEN
           
           IF (new.origin_as > 0 AND new.origin_as != 23456 AND old.isWithdrawn = True AND new.isWithdrawn = True) THEN
                     INSERT IGNORE INTO gen_prefix_validation (prefix,prefix_len,recv_origin_as,rpki_origin_as,irr_origin_as,irr_source,prefix_bits,isIPv4)

                          SELECT SQL_SMALL_RESULT new.prefix_bin,new.prefix_len,new.origin_as,
                                                       rpki.origin_as, w.origin_as,w.source,new.prefix_bits,new.isIPv4
                                   FROM (SELECT new.prefix_bin as prefix_bin, new.prefix_len as prefix_len, new.origin_as as origin_as, new.prefix_bits,
                                                     new.isIPv4) rib
                                             LEFT JOIN gen_whois_route w ON (new.prefix_bin = w.prefix AND
                                                        new.prefix_len = w.prefix_len)
                                             LEFT JOIN rpki_validator rpki ON (new.prefix_bin = rpki.prefix AND
                                                        new.prefix_len >= rpki.prefix_len and new.prefix_len <= rpki.prefix_len_max)

                           ON DUPLICATE KEY UPDATE rpki_origin_as = values(rpki_origin_as),
                                                                       irr_origin_as=values(irr_origin_as),irr_source=values(irr_source);
        END IF;


        
        IF (new.hash_id = old.hash_id AND new.peer_hash_id = old.peer_hash_id) THEN
            IF (new.isWithdrawn = False) THEN
              IF (old.path_attr_hash_id != new.path_attr_hash_id AND old.path_attr_hash_id != '') THEN
                   
                    INSERT IGNORE INTO path_attr_log (prefix,prefix_len,path_attr_hash_id,peer_hash_id,origin_as,timestamp)
                                VALUES (old.prefix,old.prefix_len,old.path_attr_hash_id,old.peer_hash_id,old.origin_as,
                                        old.timestamp);

              END IF;

              
              IF (old.isWithdrawn = True AND old.timestamp < date_sub(new.timestamp, INTERVAL 6 HOUR)) THEN
                  SET new.first_added_timestamp = current_timestamp(6);
              END IF;

            ELSE
               
                INSERT IGNORE INTO withdrawn_log
                        (prefix,prefix_len,peer_hash_id,path_attr_hash_id,origin_as,timestamp)
                            VALUES (old.prefix,old.prefix_len,old.peer_hash_id,
                                    old.path_attr_hash_id,old.origin_as,new.timestamp);
            END IF;       
            
        END IF;
      END IF;
  END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `routers`
--

DROP TABLE IF EXISTS `routers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `routers` (
  `hash_id` char(32) NOT NULL,
  `name` varchar(200) NOT NULL,
  `ip_address` varchar(40) NOT NULL,
  `router_AS` int(10) unsigned DEFAULT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `description` varchar(255) DEFAULT NULL,
  `isConnected` tinyint(4) DEFAULT 0,
  `isPassive` tinyint(4) DEFAULT 0,
  `term_reason_code` int(11) DEFAULT NULL,
  `term_reason_text` varchar(255) DEFAULT NULL,
  `term_data` mediumtext DEFAULT NULL,
  `init_data` mediumtext DEFAULT NULL,
  `geo_ip_start` varbinary(16) DEFAULT NULL,
  `collector_hash_id` char(32) NOT NULL,
  `bgp_id` varchar(46) DEFAULT NULL,
  PRIMARY KEY (`hash_id`),
  KEY `idx_name` (`name`),
  KEY `idx_ip` (`ip_address`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`localhost`*/ /*!50003 TRIGGER ins_routers BEFORE INSERT ON routers
FOR EACH ROW
    BEGIN
        declare geo_ip_start varbinary(16);
    
    SELECT ip_start INTO geo_ip_start
        FROM geo_ip
        WHERE ip_end >= inet6_aton(new.ip_address)
               and ip_start <= inet6_aton(new.ip_address) and 
                    addr_type = if (new.ip_address like "%:%", 'ipv6', 'ipv4')
         ORDER BY ip_end limit 1;

    set new.geo_ip_start = geo_ip_start;

    END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`openbmp`@`localhost`*/ /*!50003 TRIGGER upd_routers BEFORE UPDATE ON routers
FOR EACH ROW
    BEGIN
        declare geo_ip_start varbinary(16);
    
    SELECT ip_start INTO geo_ip_start
        FROM geo_ip
        WHERE ip_end >= inet6_aton(new.ip_address)
               and ip_start <= inet6_aton(new.ip_address) and 
                    addr_type = if (new.ip_address like "%:%", 'ipv6', 'ipv4')
         ORDER BY ip_end limit 1;

    set new.geo_ip_start = geo_ip_start;

    END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `rpki_history_stats`
--

DROP TABLE IF EXISTS `rpki_history_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rpki_history_stats` (
  `total_prefix` int(10) unsigned NOT NULL,
  `total_violations` int(10) unsigned NOT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6),
  PRIMARY KEY (`timestamp`),
  KEY `idx_timestamp` (`timestamp`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `rpki_validator`
--

DROP TABLE IF EXISTS `rpki_validator`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `rpki_validator` (
  `prefix` varbinary(16) NOT NULL,
  `prefix_len` tinyint(3) unsigned NOT NULL DEFAULT 0,
  `prefix_len_max` tinyint(3) unsigned NOT NULL DEFAULT 0,
  `origin_as` int(10) unsigned NOT NULL,
  `timestamp` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`prefix`,`prefix_len`,`prefix_len_max`,`origin_as`),
  KEY `idx_origin` (`origin_as`),
  KEY `idx_prefix` (`prefix`),
  KEY `idx_prefix_full` (`prefix`,`prefix_len`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `stat_reports`
--

DROP TABLE IF EXISTS `stat_reports`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `stat_reports` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `peer_hash_id` char(32) NOT NULL,
  `prefixes_rejected` bigint(20) unsigned DEFAULT NULL,
  `known_dup_prefixes` bigint(20) unsigned DEFAULT NULL,
  `known_dup_withdraws` bigint(20) unsigned DEFAULT NULL,
  `updates_invalid_by_cluster_list` bigint(20) unsigned DEFAULT NULL,
  `updates_invalid_by_as_path_loop` bigint(20) unsigned DEFAULT NULL,
  `timestamp` timestamp(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `updates_invalid_by_originagtor_id` bigint(20) unsigned DEFAULT NULL,
  `updates_invalid_by_as_confed_loop` bigint(20) unsigned DEFAULT NULL,
  `num_routes_adj_rib_in` bigint(20) unsigned DEFAULT NULL,
  `num_routes_local_rib` bigint(20) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`,`peer_hash_id`),
  KEY `idx_ts` (`timestamp`),
  KEY `idx_peer_hash_id` (`peer_hash_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `unicast_rib_lookup`
--

DROP TABLE IF EXISTS `unicast_rib_lookup`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `unicast_rib_lookup` (
  `prefix_bin` varbinary(16) NOT NULL,
  `prefix_bcast_bin` varbinary(16) NOT NULL,
  `prefix_len` int(8) unsigned NOT NULL,
  `origin_as` int(10) unsigned NOT NULL,
  `isIPv4` bit(1) NOT NULL,
  `isLS` bit(1) NOT NULL,
  `refCount` int(11) NOT NULL,
  PRIMARY KEY (`prefix_bin`,`prefix_len`),
  KEY `idx_prefix` (`prefix_bin`) USING BTREE,
  KEY `idx_prefix_bcast` (`prefix_bcast_bin`) USING BTREE,
  KEY `idx_prefix_range` (`prefix_bcast_bin`,`prefix_bin`) USING BTREE
) ENGINE=MEMORY DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `username` varchar(50) NOT NULL,
  `password` varchar(50) NOT NULL,
  `type` varchar(10) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Temporary view structure for view `v_all_routes`
--

DROP TABLE IF EXISTS `v_all_routes`;
/*!50001 DROP VIEW IF EXISTS `v_all_routes`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_all_routes` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `Prefix`,
 1 AS `PrefixLen`,
 1 AS `Origin`,
 1 AS `Origin_AS`,
 1 AS `MED`,
 1 AS `LocalPref`,
 1 AS `NH`,
 1 AS `AS_Path`,
 1 AS `ASPath_Count`,
 1 AS `Communities`,
 1 AS `ExtCommunities`,
 1 AS `ClusterList`,
 1 AS `Aggregator`,
 1 AS `PeerAddress`,
 1 AS `PeerASN`,
 1 AS `isIPv4`,
 1 AS `isPeerIPv4`,
 1 AS `isPeerVPN`,
 1 AS `LastModified`,
 1 AS `FirstAddedTimestamp`,
 1 AS `prefix_bin`,
 1 AS `path_id`,
 1 AS `labels`,
 1 AS `rib_hash_id`,
 1 AS `path_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`,
 1 AS `isWithdrawn`,
 1 AS `prefix_bits`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_geo_ip`
--

DROP TABLE IF EXISTS `v_geo_ip`;
/*!50001 DROP VIEW IF EXISTS `v_geo_ip`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_geo_ip` AS SELECT 
 1 AS `ip_start`,
 1 AS `ip_end`,
 1 AS `addr_type`,
 1 AS `country`,
 1 AS `stateprov`,
 1 AS `city`,
 1 AS `latitude`,
 1 AS `longitude`,
 1 AS `timezone_offset`,
 1 AS `timezone_name`,
 1 AS `isp_name`,
 1 AS `connection_type`,
 1 AS `organization_name`,
 1 AS `ip_start_bin`,
 1 AS `ip_end_bin`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_l3vpn_routes`
--

DROP TABLE IF EXISTS `v_l3vpn_routes`;
/*!50001 DROP VIEW IF EXISTS `v_l3vpn_routes`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_l3vpn_routes` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `RD`,
 1 AS `Prefix`,
 1 AS `PrefixLen`,
 1 AS `Origin`,
 1 AS `Origin_AS`,
 1 AS `MED`,
 1 AS `LocalPref`,
 1 AS `NH`,
 1 AS `AS_Path`,
 1 AS `ASPath_Count`,
 1 AS `Communities`,
 1 AS `ExtCommunities`,
 1 AS `ClusterList`,
 1 AS `Aggregator`,
 1 AS `PeerAddress`,
 1 AS `PeerASN`,
 1 AS `isIPv4`,
 1 AS `isPeerIPv4`,
 1 AS `isPeerVPN`,
 1 AS `LastModified`,
 1 AS `FirstAddedTimestamp`,
 1 AS `prefix_bin`,
 1 AS `path_id`,
 1 AS `labels`,
 1 AS `rib_hash_id`,
 1 AS `path_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`,
 1 AS `isWithdrawn`,
 1 AS `prefix_bits`,
 1 AS `isPrePolicy`,
 1 AS `isAdjRibIn`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_ls_links`
--

DROP TABLE IF EXISTS `v_ls_links`;
/*!50001 DROP VIEW IF EXISTS `v_ls_links`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_ls_links` AS SELECT 
 1 AS `Local_Router_Name`,
 1 AS `Remote_Router_Name`,
 1 AS `Local_IGP_RouterId`,
 1 AS `Local_RouterId`,
 1 AS `Remote_IGP_RouterId`,
 1 AS `Remote_RouterId`,
 1 AS `bgpls_id`,
 1 AS `AreaId`,
 1 AS `MT_ID`,
 1 AS `InterfaceIP`,
 1 AS `NeighborIP`,
 1 AS `isIPv4`,
 1 AS `protocol`,
 1 AS `igp_metric`,
 1 AS `local_link_id`,
 1 AS `remote_link_id`,
 1 AS `admin_group`,
 1 AS `max_link_bw`,
 1 AS `max_resv_bw`,
 1 AS `unreserved_bw`,
 1 AS `te_def_metric`,
 1 AS `mpls_proto_mask`,
 1 AS `srlg`,
 1 AS `name`,
 1 AS `timestamp`,
 1 AS `local_node_hash_id`,
 1 AS `remote_node_hash_id`,
 1 AS `localn_igp_router_id_bin`,
 1 AS `remoten_igp_router_id_bin`,
 1 AS `path_attr_hash_id`,
 1 AS `peer_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_ls_links_new`
--

DROP TABLE IF EXISTS `v_ls_links_new`;
/*!50001 DROP VIEW IF EXISTS `v_ls_links_new`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_ls_links_new` AS SELECT 
 1 AS `Local_Router_Name`,
 1 AS `Remote_Router_Name`,
 1 AS `Local_IGP_RouterId`,
 1 AS `Local_RouterId`,
 1 AS `Remote_IGP_RouterId`,
 1 AS `Remote_RouterId`,
 1 AS `bgpls_id`,
 1 AS `AreaId`,
 1 AS `MT_ID`,
 1 AS `InterfaceIP`,
 1 AS `NeighborIP`,
 1 AS `isIPv4`,
 1 AS `protocol`,
 1 AS `igp_metric`,
 1 AS `local_link_id`,
 1 AS `remote_link_id`,
 1 AS `admin_group`,
 1 AS `max_link_bw`,
 1 AS `max_resv_bw`,
 1 AS `unreserved_bw`,
 1 AS `te_def_metric`,
 1 AS `mpls_proto_mask`,
 1 AS `srlg`,
 1 AS `name`,
 1 AS `timestamp`,
 1 AS `local_node_hash_id`,
 1 AS `remote_node_hash_id`,
 1 AS `localn_igp_router_id_bin`,
 1 AS `remoten_igp_router_id_bin`,
 1 AS `path_attr_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `LinkState`,
 1 AS `LocalNodeState`,
 1 AS `RemoteNodeState`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_ls_nodes`
--

DROP TABLE IF EXISTS `v_ls_nodes`;
/*!50001 DROP VIEW IF EXISTS `v_ls_nodes`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_ls_nodes` AS SELECT 
 1 AS `RouterName`,
 1 AS `RouterIP`,
 1 AS `PeerName`,
 1 AS `PeerIP`,
 1 AS `IGP_RouterId`,
 1 AS `NodeName`,
 1 AS `RouterId`,
 1 AS `id`,
 1 AS `bgpls_id`,
 1 AS `OspfAreaId`,
 1 AS `ISISAreaId`,
 1 AS `protocol`,
 1 AS `flags`,
 1 AS `timestamp`,
 1 AS `asn`,
 1 AS `AS_Path`,
 1 AS `LocalPref`,
 1 AS `MED`,
 1 AS `NH`,
 1 AS `mt_id`,
 1 AS `hash_id`,
 1 AS `path_attr_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_ls_prefixes`
--

DROP TABLE IF EXISTS `v_ls_prefixes`;
/*!50001 DROP VIEW IF EXISTS `v_ls_prefixes`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_ls_prefixes` AS SELECT 
 1 AS `Local_Router_Name`,
 1 AS `Local_IGP_RouterId`,
 1 AS `Local_RouterId`,
 1 AS `id`,
 1 AS `mt_id`,
 1 AS `Prefix`,
 1 AS `prefix_len`,
 1 AS `ospf_route_type`,
 1 AS `metric`,
 1 AS `protocol`,
 1 AS `timestamp`,
 1 AS `prefix_bcast_bin`,
 1 AS `prefix_bin`,
 1 AS `peer_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_peer_prefix_report`
--

DROP TABLE IF EXISTS `v_peer_prefix_report`;
/*!50001 DROP VIEW IF EXISTS `v_peer_prefix_report`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_peer_prefix_report` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `TS`,
 1 AS `Rejected`,
 1 AS `ConfedLoop`,
 1 AS `ASLoop`,
 1 AS `InvalidClusterList`,
 1 AS `InvalidOriginator`,
 1 AS `KnownPrefix_DUP`,
 1 AS `KnownWithdraw_DUP`,
 1 AS `Pre_RIB`,
 1 AS `Post_RIB`,
 1 AS `router_hash_id`,
 1 AS `peer_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_peer_prefix_report_last`
--

DROP TABLE IF EXISTS `v_peer_prefix_report_last`;
/*!50001 DROP VIEW IF EXISTS `v_peer_prefix_report_last`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_peer_prefix_report_last` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `TS`,
 1 AS `Rejected`,
 1 AS `ConfedLoop`,
 1 AS `ASLoop`,
 1 AS `InvalidClusterList`,
 1 AS `InvalidOriginator`,
 1 AS `KnownPrefix_DUP`,
 1 AS `KnownWithdraw_DUP`,
 1 AS `Pre_RIB`,
 1 AS `Post_RIB`,
 1 AS `router_hash_id`,
 1 AS `peer_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_peer_prefix_report_last_id`
--

DROP TABLE IF EXISTS `v_peer_prefix_report_last_id`;
/*!50001 DROP VIEW IF EXISTS `v_peer_prefix_report_last_id`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_peer_prefix_report_last_id` AS SELECT 
 1 AS `id`,
 1 AS `peer_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_peers`
--

DROP TABLE IF EXISTS `v_peers`;
/*!50001 DROP VIEW IF EXISTS `v_peers`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_peers` AS SELECT 
 1 AS `RouterName`,
 1 AS `RouterIP`,
 1 AS `LocalIP`,
 1 AS `LocalPort`,
 1 AS `LocalASN`,
 1 AS `LocalBGPId`,
 1 AS `PeerName`,
 1 AS `PeerIP`,
 1 AS `PeerPort`,
 1 AS `PeerASN`,
 1 AS `PeerBGPId`,
 1 AS `LocalHoldTime`,
 1 AS `PeerHoldTime`,
 1 AS `isUp`,
 1 AS `isBMPConnected`,
 1 AS `isPeerIPv4`,
 1 AS `isPeerVPN`,
 1 AS `isPrePolicy`,
 1 AS `LastModified`,
 1 AS `LastBMPReasonCode`,
 1 AS `LastDownCode`,
 1 AS `LastdownSubCode`,
 1 AS `LastDownMessage`,
 1 AS `LastDownTimestamp`,
 1 AS `SentCapabilities`,
 1 AS `RecvCapabilities`,
 1 AS `as_name`,
 1 AS `isLocRib`,
 1 AS `isLocRibFiltered`,
 1 AS `table_name`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`,
 1 AS `geo_ip_start`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_routes`
--

DROP TABLE IF EXISTS `v_routes`;
/*!50001 DROP VIEW IF EXISTS `v_routes`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_routes` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `Prefix`,
 1 AS `PrefixLen`,
 1 AS `Origin`,
 1 AS `Origin_AS`,
 1 AS `MED`,
 1 AS `LocalPref`,
 1 AS `NH`,
 1 AS `AS_Path`,
 1 AS `ASPath_Count`,
 1 AS `Communities`,
 1 AS `ExtCommunities`,
 1 AS `ClusterList`,
 1 AS `Aggregator`,
 1 AS `PeerAddress`,
 1 AS `PeerASN`,
 1 AS `isIPv4`,
 1 AS `isPeerIPv4`,
 1 AS `isPeerVPN`,
 1 AS `LastModified`,
 1 AS `FirstAddedTimestamp`,
 1 AS `prefix_bin`,
 1 AS `path_id`,
 1 AS `labels`,
 1 AS `rib_hash_id`,
 1 AS `path_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`,
 1 AS `isWithdrawn`,
 1 AS `prefix_bits`,
 1 AS `isPrePolicy`,
 1 AS `isAdjRibIn`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_routes_history`
--

DROP TABLE IF EXISTS `v_routes_history`;
/*!50001 DROP VIEW IF EXISTS `v_routes_history`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_routes_history` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `Prefix`,
 1 AS `PrefixLen`,
 1 AS `Origin`,
 1 AS `Origin_AS`,
 1 AS `MED`,
 1 AS `LocalPref`,
 1 AS `NH`,
 1 AS `AS_Path`,
 1 AS `ASPath_Count`,
 1 AS `Communities`,
 1 AS `ExtCommunities`,
 1 AS `ClusterList`,
 1 AS `Aggregator`,
 1 AS `PeerAddress`,
 1 AS `PeerASN`,
 1 AS `isPeerIPv4`,
 1 AS `isPeerVPN`,
 1 AS `id`,
 1 AS `LastModified`,
 1 AS `path_attr_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Temporary view structure for view `v_routes_withdraws`
--

DROP TABLE IF EXISTS `v_routes_withdraws`;
/*!50001 DROP VIEW IF EXISTS `v_routes_withdraws`*/;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
/*!50001 CREATE VIEW `v_routes_withdraws` AS SELECT 
 1 AS `RouterName`,
 1 AS `PeerName`,
 1 AS `Prefix`,
 1 AS `PrefixLen`,
 1 AS `Origin`,
 1 AS `Origin_AS`,
 1 AS `MED`,
 1 AS `LocalPref`,
 1 AS `NH`,
 1 AS `AS_Path`,
 1 AS `ASPath_Count`,
 1 AS `Communities`,
 1 AS `ExtCommunities`,
 1 AS `ClusterList`,
 1 AS `Aggregator`,
 1 AS `PeerAddress`,
 1 AS `PeerASN`,
 1 AS `isPeerIPv4`,
 1 AS `isPeerVPN`,
 1 AS `id`,
 1 AS `LastModified`,
 1 AS `path_attr_hash_id`,
 1 AS `peer_hash_id`,
 1 AS `router_hash_id`*/;
SET character_set_client = @saved_cs_client;

--
-- Table structure for table `withdrawn_log`
--

DROP TABLE IF EXISTS `withdrawn_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `withdrawn_log` (
  `peer_hash_id` char(32) NOT NULL,
  `prefix` varchar(40) NOT NULL,
  `prefix_len` int(10) unsigned NOT NULL,
  `timestamp` datetime(6) NOT NULL DEFAULT current_timestamp(6) ON UPDATE current_timestamp(6),
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `path_attr_hash_id` char(32) NOT NULL DEFAULT '',
  `origin_as` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`,`peer_hash_id`,`timestamp`),
  KEY `idx_prefix` (`prefix`,`prefix_len`),
  KEY `idx_ts` (`timestamp`),
  KEY `idx_peer_hash_id` (`peer_hash_id`),
  KEY `idx_origin_as` (`origin_as`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8
 PARTITION BY RANGE  COLUMNS(`timestamp`)
SUBPARTITION BY KEY (`peer_hash_id`)
SUBPARTITIONS 32
(PARTITION `p2017_10` VALUES LESS THAN ('2017-11-01') ENGINE = InnoDB,
 PARTITION `p2017_11` VALUES LESS THAN ('2017-12-01') ENGINE = InnoDB,
 PARTITION `p2017_12` VALUES LESS THAN ('2018-01-01') ENGINE = InnoDB,
 PARTITION `p2018_01` VALUES LESS THAN ('2018-02-01') ENGINE = InnoDB,
 PARTITION `p2018_02` VALUES LESS THAN ('2018-03-01') ENGINE = InnoDB,
 PARTITION `p2018_03` VALUES LESS THAN ('2018-04-01') ENGINE = InnoDB,
 PARTITION `p2018_04` VALUES LESS THAN ('2018-05-01') ENGINE = InnoDB,
 PARTITION `pOther` VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping events for database 'openBMP'
--
/*!50106 SET @save_time_zone= @@TIME_ZONE */ ;
/*!50106 DROP EVENT IF EXISTS `chg_l3vpn_stats_bypeer` */;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = '+00:00' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`openbmp`@`%`*/ /*!50106 EVENT `chg_l3vpn_stats_bypeer` ON SCHEDULE EVERY 5 MINUTE STARTS '2017-10-16 15:21:23' ON COMPLETION NOT PRESERVE ENABLE DO REPLACE INTO gen_l3vpn_chg_stats_bypeer (interval_time, peer_hash_id, updates,withdraws)

        SELECT c.IntervalTime,if (c.peer_hash_id is null, w.peer_hash_id, c.peer_hash_id) as peer_hash_id,
              if (c.updates is null, 0, c.updates) as updates,
              if (w.withdraws is null, 0, w.withdraws) as withdraws
          FROM
            (SELECT
                from_unixtime(unix_timestamp(c.timestamp) - unix_timestamp(c.timestamp) % 60.0) AS IntervalTime,
                peer_hash_id, count(c.peer_hash_id) as updates
              FROM l3vpn_log c
              WHERE c.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 10 MINUTE), "%Y-%m-%d %H:%i:00")
                    AND c.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
                    AND type = 'changed'
              GROUP BY IntervalTime,c.peer_hash_id) c

           LEFT JOIN
               (SELECT
                  from_unixtime(unix_timestamp(w.timestamp) - unix_timestamp(w.timestamp) % 60.0) AS IntervalTime,
                  peer_hash_id, count(w.peer_hash_id) as withdraws
                FROM l3vpn_log w
                WHERE w.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                      AND w.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
                      AND type = 'withdrawn'
                GROUP BY IntervalTime,w.peer_hash_id) w
            ON (c.IntervalTime = w.IntervalTime AND c.peer_hash_id = w.peer_hash_id) */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `chg_stats_byasn` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = '+00:00' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`openbmp`@`%`*/ /*!50106 EVENT `chg_stats_byasn` ON SCHEDULE EVERY 5 MINUTE STARTS '2017-09-22 15:26:05' ON COMPLETION NOT PRESERVE ENABLE DO REPLACE INTO gen_chg_stats_byasn (interval_time, peer_hash_id,origin_as, updates,withdraws)
        SELECT c.IntervalTime,if (c.peer_hash_id is null, w.peer_hash_id, c.peer_hash_id) as peer_hash_id,
              if (c.origin_as is null, w.origin_as, c.origin_as),
              if (c.updates is null, 0, c.updates) as updates,
              if (w.withdraws is null, 0, w.withdraws) as withdraws
          FROM
            (SELECT
                from_unixtime(unix_timestamp(c.timestamp) - unix_timestamp(c.timestamp) % 60.0) AS IntervalTime,
                peer_hash_id, origin_as, count(c.peer_hash_id) as updates
              FROM path_attr_log c
              WHERE c.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                    AND c.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
              GROUP BY IntervalTime,c.peer_hash_id,origin_as) c

           LEFT JOIN
               (SELECT
                  from_unixtime(unix_timestamp(w.timestamp) - unix_timestamp(w.timestamp) % 60.0) AS IntervalTime,
                  peer_hash_id, origin_as, count(w.peer_hash_id) as withdraws
                FROM withdrawn_log w
                WHERE w.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                      AND w.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
                GROUP BY IntervalTime,w.peer_hash_id,origin_as) w
            ON (c.IntervalTime = w.IntervalTime AND c.peer_hash_id = w.peer_hash_id
                and c.origin_as = w.origin_as) */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `chg_stats_bypeer` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = '+00:00' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`openbmp`@`%`*/ /*!50106 EVENT `chg_stats_bypeer` ON SCHEDULE EVERY 5 MINUTE STARTS '2017-09-22 15:26:23' ON COMPLETION NOT PRESERVE ENABLE DO REPLACE INTO gen_chg_stats_bypeer (interval_time, peer_hash_id, updates,withdraws)
        SELECT c.IntervalTime,if (c.peer_hash_id is null, w.peer_hash_id, c.peer_hash_id) as peer_hash_id,
              if (c.updates is null, 0, c.updates) as updates,
              if (w.withdraws is null, 0, w.withdraws) as withdraws
          FROM
            (SELECT
                from_unixtime(unix_timestamp(c.timestamp) - unix_timestamp(c.timestamp) % 60.0) AS IntervalTime,
                peer_hash_id, count(c.peer_hash_id) as updates
              FROM path_attr_log c
              WHERE c.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                    AND c.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
              GROUP BY IntervalTime,c.peer_hash_id) c

           LEFT JOIN
               (SELECT
                  from_unixtime(unix_timestamp(w.timestamp) - unix_timestamp(w.timestamp) % 60.0) AS IntervalTime,
                  peer_hash_id, count(w.peer_hash_id) as withdraws
                FROM withdrawn_log w
                WHERE w.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                      AND w.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
                GROUP BY IntervalTime,w.peer_hash_id) w
            ON (c.IntervalTime = w.IntervalTime AND c.peer_hash_id = w.peer_hash_id) */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
/*!50106 DROP EVENT IF EXISTS `chg_stats_byprefix` */;;
DELIMITER ;;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;;
/*!50003 SET character_set_client  = utf8 */ ;;
/*!50003 SET character_set_results = utf8 */ ;;
/*!50003 SET collation_connection  = utf8_general_ci */ ;;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;;
/*!50003 SET sql_mode              = 'STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */ ;;
/*!50003 SET @saved_time_zone      = @@time_zone */ ;;
/*!50003 SET time_zone             = '+00:00' */ ;;
/*!50106 CREATE*/ /*!50117 DEFINER=`openbmp`@`%`*/ /*!50106 EVENT `chg_stats_byprefix` ON SCHEDULE EVERY 5 MINUTE STARTS '2017-09-22 15:26:13' ON COMPLETION NOT PRESERVE ENABLE DO REPLACE INTO gen_chg_stats_byprefix (interval_time, peer_hash_id, prefix, prefix_len, updates,withdraws)
        SELECT c.IntervalTime,if (c.peer_hash_id is null, w.peer_hash_id, c.peer_hash_id) as peer_hash_id,
              if (c.prefix is null, w.prefix, c.prefix) as prefix,
              if (c.prefix is null, w.prefix_len, c.prefix_len) as prefix_len,
              if (c.updates is null, 0, c.updates) as updates,
              if (w.withdraws is null, 0, w.withdraws) as withdraws
          FROM
            (SELECT
                from_unixtime(unix_timestamp(c.timestamp) - unix_timestamp(c.timestamp) % 60.0) AS IntervalTime,
                peer_hash_id, prefix, prefix_len, count(c.peer_hash_id) as updates
              FROM path_attr_log c
              WHERE c.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                    AND c.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
              GROUP BY IntervalTime,c.peer_hash_id,prefix,prefix_len) c

           LEFT JOIN
               (SELECT
                  from_unixtime(unix_timestamp(w.timestamp) - unix_timestamp(w.timestamp) % 60.0) AS IntervalTime,
                  peer_hash_id, prefix, prefix_len, count(w.peer_hash_id) as withdraws
                FROM withdrawn_log w
                WHERE w.timestamp >= date_format(date_sub(current_timestamp, INTERVAL 25 MINUTE), "%Y-%m-%d %H:%i:00")
                      AND w.timestamp <= date_format(current_timestamp, "%Y-%m-%d %H:%i:00")
                GROUP BY IntervalTime,w.peer_hash_id,prefix,prefix_len) w
            ON (c.IntervalTime = w.IntervalTime AND c.peer_hash_id = w.peer_hash_id
                AND c.prefix = w.prefix and c.prefix_len = w.prefix_len) */ ;;
/*!50003 SET time_zone             = @saved_time_zone */ ;;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;;
/*!50003 SET character_set_client  = @saved_cs_client */ ;;
/*!50003 SET character_set_results = @saved_cs_results */ ;;
/*!50003 SET collation_connection  = @saved_col_connection */ ;;
DELIMITER ;
/*!50106 SET TIME_ZONE= @save_time_zone */ ;

--
-- Final view structure for view `prefix_aspath`
--

/*!50001 DROP VIEW IF EXISTS `prefix_aspath`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `prefix_aspath` AS select `rtr`.`name` AS `RouterName`,`p`.`name` AS `PeerName`,`r`.`prefix` AS `Prefix`,`r`.`prefix_len` AS `PrefixLen`,`path`.`origin` AS `Origin`,trim(`path`.`as_path`) AS `AS_Path`,`path`.`next_hop` AS `NH` from (`bgp_peers` `p` straight_join ((`rib` `r` straight_join `routers` `rtr`) straight_join `path_attrs` `path`) on(`r`.`peer_hash_id` = `p`.`hash_id` and `r`.`path_attr_hash_id` = `path`.`hash_id` and `p`.`router_hash_id` = `rtr`.`hash_id`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_all_routes`
--

/*!50001 DROP VIEW IF EXISTS `v_all_routes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_all_routes` AS select if(length(`rtr`.`name`) > 0,`rtr`.`name`,`rtr`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`r`.`prefix` AS `Prefix`,`r`.`prefix_len` AS `PrefixLen`,`path`.`origin` AS `Origin`,`r`.`origin_as` AS `Origin_AS`,`path`.`med` AS `MED`,`path`.`local_pref` AS `LocalPref`,`path`.`next_hop` AS `NH`,`path`.`as_path` AS `AS_Path`,`path`.`as_path_count` AS `ASPath_Count`,`path`.`community_list` AS `Communities`,`path`.`ext_community_list` AS `ExtCommunities`,`path`.`cluster_list` AS `ClusterList`,`path`.`aggregator` AS `Aggregator`,`p`.`peer_addr` AS `PeerAddress`,`p`.`peer_as` AS `PeerASN`,`r`.`isIPv4` AS `isIPv4`,`p`.`isIPv4` AS `isPeerIPv4`,`p`.`isL3VPNpeer` AS `isPeerVPN`,`r`.`timestamp` AS `LastModified`,`r`.`first_added_timestamp` AS `FirstAddedTimestamp`,`r`.`prefix_bin` AS `prefix_bin`,`r`.`path_id` AS `path_id`,`r`.`labels` AS `labels`,`r`.`hash_id` AS `rib_hash_id`,`r`.`path_attr_hash_id` AS `path_hash_id`,`r`.`peer_hash_id` AS `peer_hash_id`,`rtr`.`hash_id` AS `router_hash_id`,`r`.`isWithdrawn` AS `isWithdrawn`,`r`.`prefix_bits` AS `prefix_bits` from (((`bgp_peers` `p` join `rib` `r` on(`r`.`peer_hash_id` = `p`.`hash_id`)) join `path_attrs` `path` on(`path`.`hash_id` = `r`.`path_attr_hash_id` and `path`.`peer_hash_id` = `r`.`peer_hash_id`)) join `routers` `rtr` on(`p`.`router_hash_id` = `rtr`.`hash_id`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_geo_ip`
--

/*!50001 DROP VIEW IF EXISTS `v_geo_ip`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_geo_ip` AS select inet6_ntoa(`geo_ip`.`ip_start`) AS `ip_start`,inet6_ntoa(`geo_ip`.`ip_end`) AS `ip_end`,`geo_ip`.`addr_type` AS `addr_type`,`geo_ip`.`country` AS `country`,`geo_ip`.`stateprov` AS `stateprov`,`geo_ip`.`city` AS `city`,`geo_ip`.`latitude` AS `latitude`,`geo_ip`.`longitude` AS `longitude`,`geo_ip`.`timezone_offset` AS `timezone_offset`,`geo_ip`.`timezone_name` AS `timezone_name`,`geo_ip`.`isp_name` AS `isp_name`,`geo_ip`.`connection_type` AS `connection_type`,`geo_ip`.`organization_name` AS `organization_name`,`geo_ip`.`ip_start` AS `ip_start_bin`,`geo_ip`.`ip_end` AS `ip_end_bin` from `geo_ip` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_l3vpn_routes`
--

/*!50001 DROP VIEW IF EXISTS `v_l3vpn_routes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_l3vpn_routes` AS select if(length(`rtr`.`name`) > 0,`rtr`.`name`,`rtr`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`r`.`rd` AS `RD`,`r`.`prefix` AS `Prefix`,`r`.`prefix_len` AS `PrefixLen`,`path`.`origin` AS `Origin`,`r`.`origin_as` AS `Origin_AS`,`path`.`med` AS `MED`,`path`.`local_pref` AS `LocalPref`,`path`.`next_hop` AS `NH`,`path`.`as_path` AS `AS_Path`,`path`.`as_path_count` AS `ASPath_Count`,`path`.`community_list` AS `Communities`,`path`.`ext_community_list` AS `ExtCommunities`,`path`.`cluster_list` AS `ClusterList`,`path`.`aggregator` AS `Aggregator`,`p`.`peer_addr` AS `PeerAddress`,`p`.`peer_as` AS `PeerASN`,`r`.`isIPv4` AS `isIPv4`,`p`.`isIPv4` AS `isPeerIPv4`,`p`.`isL3VPNpeer` AS `isPeerVPN`,`r`.`timestamp` AS `LastModified`,`r`.`first_added_timestamp` AS `FirstAddedTimestamp`,`r`.`prefix_bin` AS `prefix_bin`,`r`.`path_id` AS `path_id`,`r`.`labels` AS `labels`,`r`.`hash_id` AS `rib_hash_id`,`r`.`path_attr_hash_id` AS `path_hash_id`,`r`.`peer_hash_id` AS `peer_hash_id`,`rtr`.`hash_id` AS `router_hash_id`,`r`.`isWithdrawn` AS `isWithdrawn`,`r`.`prefix_bits` AS `prefix_bits`,`r`.`isPrePolicy` AS `isPrePolicy`,`r`.`isAdjRibIn` AS `isAdjRibIn` from (((`bgp_peers` `p` join `l3vpn_rib` `r` on(`r`.`peer_hash_id` = `p`.`hash_id`)) join `path_attrs` `path` on(`path`.`hash_id` = `r`.`path_attr_hash_id` and `path`.`peer_hash_id` = `r`.`peer_hash_id`)) join `routers` `rtr` on(`p`.`router_hash_id` = `rtr`.`hash_id`)) where `r`.`isWithdrawn` = 0 */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_ls_links`
--

/*!50001 DROP VIEW IF EXISTS `v_ls_links`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_ls_links` AS select `localn`.`name` AS `Local_Router_Name`,`remoten`.`name` AS `Remote_Router_Name`,`localn`.`igp_router_id` AS `Local_IGP_RouterId`,`localn`.`router_id` AS `Local_RouterId`,`remoten`.`igp_router_id` AS `Remote_IGP_RouterId`,`remoten`.`router_id` AS `Remote_RouterId`,`localn`.`bgp_ls_id` AS `bgpls_id`,if(`ln`.`protocol` in ('OSPFv2','OSPFv3'),`localn`.`ospf_area_id`,`localn`.`isis_area_id`) AS `AreaId`,`ln`.`mt_id` AS `MT_ID`,`ln`.`interface_addr` AS `InterfaceIP`,`ln`.`neighbor_addr` AS `NeighborIP`,`ln`.`isIPv4` AS `isIPv4`,`ln`.`protocol` AS `protocol`,`ln`.`igp_metric` AS `igp_metric`,`ln`.`local_link_id` AS `local_link_id`,`ln`.`remote_link_id` AS `remote_link_id`,`ln`.`admin_group` AS `admin_group`,`ln`.`max_link_bw` AS `max_link_bw`,`ln`.`max_resv_bw` AS `max_resv_bw`,`ln`.`unreserved_bw` AS `unreserved_bw`,`ln`.`te_def_metric` AS `te_def_metric`,`ln`.`mpls_proto_mask` AS `mpls_proto_mask`,`ln`.`srlg` AS `srlg`,`ln`.`name` AS `name`,`ln`.`timestamp` AS `timestamp`,`ln`.`local_node_hash_id` AS `local_node_hash_id`,`ln`.`remote_node_hash_id` AS `remote_node_hash_id`,`localn`.`igp_router_id` AS `localn_igp_router_id_bin`,`remoten`.`igp_router_id` AS `remoten_igp_router_id_bin`,`ln`.`path_attr_hash_id` AS `path_attr_hash_id`,`ln`.`peer_hash_id` AS `peer_hash_id` from ((`ls_links` `ln` join `ls_nodes` `localn` on(`ln`.`local_node_hash_id` = `localn`.`hash_id` and `ln`.`peer_hash_id` = `localn`.`peer_hash_id` and `localn`.`isWithdrawn` = 0)) join `ls_nodes` `remoten` on(`ln`.`remote_node_hash_id` = `remoten`.`hash_id` and `ln`.`peer_hash_id` = `remoten`.`peer_hash_id` and `remoten`.`isWithdrawn` = 0)) where `ln`.`isWithdrawn` = 0 */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_ls_links_new`
--

/*!50001 DROP VIEW IF EXISTS `v_ls_links_new`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_ls_links_new` AS select `localn`.`name` AS `Local_Router_Name`,`remoten`.`name` AS `Remote_Router_Name`,`localn`.`igp_router_id` AS `Local_IGP_RouterId`,`localn`.`router_id` AS `Local_RouterId`,`remoten`.`igp_router_id` AS `Remote_IGP_RouterId`,`remoten`.`router_id` AS `Remote_RouterId`,`localn`.`bgp_ls_id` AS `bgpls_id`,if(`ln`.`protocol` in ('OSPFv2','OSPFv3'),`localn`.`ospf_area_id`,`localn`.`isis_area_id`) AS `AreaId`,`ln`.`mt_id` AS `MT_ID`,`ln`.`interface_addr` AS `InterfaceIP`,`ln`.`neighbor_addr` AS `NeighborIP`,`ln`.`isIPv4` AS `isIPv4`,`ln`.`protocol` AS `protocol`,`ln`.`igp_metric` AS `igp_metric`,`ln`.`local_link_id` AS `local_link_id`,`ln`.`remote_link_id` AS `remote_link_id`,`ln`.`admin_group` AS `admin_group`,`ln`.`max_link_bw` AS `max_link_bw`,`ln`.`max_resv_bw` AS `max_resv_bw`,`ln`.`unreserved_bw` AS `unreserved_bw`,`ln`.`te_def_metric` AS `te_def_metric`,`ln`.`mpls_proto_mask` AS `mpls_proto_mask`,`ln`.`srlg` AS `srlg`,`ln`.`name` AS `name`,`ln`.`timestamp` AS `timestamp`,`ln`.`local_node_hash_id` AS `local_node_hash_id`,`ln`.`remote_node_hash_id` AS `remote_node_hash_id`,`localn`.`igp_router_id` AS `localn_igp_router_id_bin`,`remoten`.`igp_router_id` AS `remoten_igp_router_id_bin`,`ln`.`path_attr_hash_id` AS `path_attr_hash_id`,`ln`.`peer_hash_id` AS `peer_hash_id`,if(`ln`.`isWithdrawn` <> 0 or `localn`.`isWithdrawn` <> 0,'INACTIVE','ACTIVE') AS `LinkState`,if(`localn`.`isWithdrawn`,'INACTIVE','ACTIVE') AS `LocalNodeState`,if(`remoten`.`isWithdrawn`,'INACTIVE','ACTIVE') AS `RemoteNodeState` from ((`ls_links` `ln` join `ls_nodes` `localn` on(`ln`.`local_node_hash_id` = `localn`.`hash_id` and `ln`.`peer_hash_id` = `localn`.`peer_hash_id`)) join `ls_nodes` `remoten` on(`ln`.`remote_node_hash_id` = `remoten`.`hash_id` and `ln`.`peer_hash_id` = `remoten`.`peer_hash_id`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_ls_nodes`
--

/*!50001 DROP VIEW IF EXISTS `v_ls_nodes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_ls_nodes` AS select `r`.`name` AS `RouterName`,`r`.`ip_address` AS `RouterIP`,`p`.`name` AS `PeerName`,`p`.`peer_addr` AS `PeerIP`,`ls_nodes`.`igp_router_id` AS `IGP_RouterId`,`ls_nodes`.`name` AS `NodeName`,if(`ls_nodes`.`protocol` like 'OSPF%',`ls_nodes`.`igp_router_id`,`ls_nodes`.`router_id`) AS `RouterId`,`ls_nodes`.`id` AS `id`,`ls_nodes`.`bgp_ls_id` AS `bgpls_id`,`ls_nodes`.`ospf_area_id` AS `OspfAreaId`,`ls_nodes`.`isis_area_id` AS `ISISAreaId`,`ls_nodes`.`protocol` AS `protocol`,`ls_nodes`.`flags` AS `flags`,`ls_nodes`.`timestamp` AS `timestamp`,`ls_nodes`.`asn` AS `asn`,`path_attrs`.`as_path` AS `AS_Path`,`path_attrs`.`local_pref` AS `LocalPref`,`path_attrs`.`med` AS `MED`,`path_attrs`.`next_hop` AS `NH`,`links`.`mt_id` AS `mt_id`,`ls_nodes`.`hash_id` AS `hash_id`,`ls_nodes`.`path_attr_hash_id` AS `path_attr_hash_id`,`ls_nodes`.`peer_hash_id` AS `peer_hash_id`,`r`.`hash_id` AS `router_hash_id` from ((((`ls_nodes` left join `path_attrs` on(`ls_nodes`.`path_attr_hash_id` = `path_attrs`.`hash_id` and `ls_nodes`.`peer_hash_id` = `path_attrs`.`peer_hash_id`)) join `ls_links` `links` on(`ls_nodes`.`hash_id` = `links`.`local_node_hash_id` and `links`.`isWithdrawn` = 0)) join `bgp_peers` `p` on(`p`.`hash_id` = `ls_nodes`.`peer_hash_id`)) join `routers` `r` on(`p`.`router_hash_id` = `r`.`hash_id`)) where !(`ls_nodes`.`igp_router_id` regexp '..[1-9A-F]00$') and `ls_nodes`.`igp_router_id`  not like '%]' and `ls_nodes`.`isWithdrawn` = 0 group by `ls_nodes`.`peer_hash_id`,`ls_nodes`.`hash_id`,`links`.`mt_id` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_ls_prefixes`
--

/*!50001 DROP VIEW IF EXISTS `v_ls_prefixes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_ls_prefixes` AS select `localn`.`name` AS `Local_Router_Name`,`localn`.`igp_router_id` AS `Local_IGP_RouterId`,`localn`.`router_id` AS `Local_RouterId`,`lp`.`id` AS `id`,`lp`.`mt_id` AS `mt_id`,`lp`.`prefix` AS `Prefix`,`lp`.`prefix_len` AS `prefix_len`,`lp`.`ospf_route_type` AS `ospf_route_type`,`lp`.`metric` AS `metric`,`lp`.`protocol` AS `protocol`,`lp`.`timestamp` AS `timestamp`,`lp`.`prefix_bcast_bin` AS `prefix_bcast_bin`,`lp`.`prefix_bin` AS `prefix_bin`,`lp`.`peer_hash_id` AS `peer_hash_id` from (`ls_prefixes` `lp` join `ls_nodes` `localn` on(`lp`.`local_node_hash_id` = `localn`.`hash_id`)) where `lp`.`isWithdrawn` = 0 */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_peer_prefix_report`
--

/*!50001 DROP VIEW IF EXISTS `v_peer_prefix_report`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_peer_prefix_report` AS select if(length(`r`.`name`) > 0,`r`.`name`,`r`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`s`.`timestamp` AS `TS`,`s`.`prefixes_rejected` AS `Rejected`,`s`.`updates_invalid_by_as_confed_loop` AS `ConfedLoop`,`s`.`updates_invalid_by_as_path_loop` AS `ASLoop`,`s`.`updates_invalid_by_cluster_list` AS `InvalidClusterList`,`s`.`updates_invalid_by_originagtor_id` AS `InvalidOriginator`,`s`.`known_dup_prefixes` AS `KnownPrefix_DUP`,`s`.`known_dup_withdraws` AS `KnownWithdraw_DUP`,`s`.`num_routes_adj_rib_in` AS `Pre_RIB`,`s`.`num_routes_local_rib` AS `Post_RIB`,`r`.`hash_id` AS `router_hash_id`,`p`.`hash_id` AS `peer_hash_id` from ((`stat_reports` `s` join `bgp_peers` `p` on(`s`.`peer_hash_id` = `p`.`hash_id`)) join `routers` `r` on(`p`.`router_hash_id` = `r`.`hash_id`)) order by `s`.`timestamp` desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_peer_prefix_report_last`
--

/*!50001 DROP VIEW IF EXISTS `v_peer_prefix_report_last`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8mb4 */;
/*!50001 SET character_set_results     = utf8mb4 */;
/*!50001 SET collation_connection      = utf8mb4_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_peer_prefix_report_last` AS select if(length(`r`.`name`) > 0,`r`.`name`,`r`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`s`.`timestamp` AS `TS`,`s`.`prefixes_rejected` AS `Rejected`,`s`.`updates_invalid_by_as_confed_loop` AS `ConfedLoop`,`s`.`updates_invalid_by_as_path_loop` AS `ASLoop`,`s`.`updates_invalid_by_cluster_list` AS `InvalidClusterList`,`s`.`updates_invalid_by_originagtor_id` AS `InvalidOriginator`,`s`.`known_dup_prefixes` AS `KnownPrefix_DUP`,`s`.`known_dup_withdraws` AS `KnownWithdraw_DUP`,`s`.`num_routes_adj_rib_in` AS `Pre_RIB`,`s`.`num_routes_local_rib` AS `Post_RIB`,`r`.`hash_id` AS `router_hash_id`,`p`.`hash_id` AS `peer_hash_id` from (((`v_peer_prefix_report_last_id` `i` straight_join `stat_reports` `s` on(`i`.`id` = `s`.`id`)) straight_join `bgp_peers` `p` on(`s`.`peer_hash_id` = `p`.`hash_id`)) straight_join `routers` `r` on(`p`.`router_hash_id` = `r`.`hash_id`)) group by `s`.`peer_hash_id` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_peer_prefix_report_last_id`
--

/*!50001 DROP VIEW IF EXISTS `v_peer_prefix_report_last_id`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`root`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_peer_prefix_report_last_id` AS select max(`stat_reports`.`id`) AS `id`,`stat_reports`.`peer_hash_id` AS `peer_hash_id` from `stat_reports` where `stat_reports`.`timestamp` >= current_timestamp() - interval 72 hour group by `stat_reports`.`peer_hash_id` */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_peers`
--

/*!50001 DROP VIEW IF EXISTS `v_peers`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_peers` AS select if(length(`rtr`.`name`) > 0,`rtr`.`name`,`rtr`.`ip_address`) AS `RouterName`,`rtr`.`ip_address` AS `RouterIP`,`p`.`local_ip` AS `LocalIP`,`p`.`local_port` AS `LocalPort`,`p`.`local_asn` AS `LocalASN`,`p`.`local_bgp_id` AS `LocalBGPId`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`p`.`peer_addr` AS `PeerIP`,`p`.`remote_port` AS `PeerPort`,`p`.`peer_as` AS `PeerASN`,`p`.`peer_bgp_id` AS `PeerBGPId`,`p`.`local_hold_time` AS `LocalHoldTime`,`p`.`remote_hold_time` AS `PeerHoldTime`,`p`.`state` AS `isUp`,`rtr`.`isConnected` AS `isBMPConnected`,`p`.`isIPv4` AS `isPeerIPv4`,`p`.`isL3VPNpeer` AS `isPeerVPN`,`p`.`isPrePolicy` AS `isPrePolicy`,`p`.`timestamp` AS `LastModified`,`p`.`bmp_reason` AS `LastBMPReasonCode`,`p`.`bgp_err_code` AS `LastDownCode`,`p`.`bgp_err_subcode` AS `LastdownSubCode`,`p`.`error_text` AS `LastDownMessage`,`p`.`timestamp` AS `LastDownTimestamp`,`p`.`sent_capabilities` AS `SentCapabilities`,`p`.`recv_capabilities` AS `RecvCapabilities`,`w`.`as_name` AS `as_name`,`p`.`isLocRib` AS `isLocRib`,`p`.`isLocRibFiltered` AS `isLocRibFiltered`,`p`.`table_name` AS `table_name`,`p`.`hash_id` AS `peer_hash_id`,`rtr`.`hash_id` AS `router_hash_id`,`p`.`geo_ip_start` AS `geo_ip_start` from ((`bgp_peers` `p` join `routers` `rtr` on(`p`.`router_hash_id` = `rtr`.`hash_id`)) left join `gen_whois_asn` `w` on(`p`.`peer_as` = `w`.`asn`)) */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_routes`
--

/*!50001 DROP VIEW IF EXISTS `v_routes`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `v_routes` AS select if(length(`rtr`.`name`) > 0,`rtr`.`name`,`rtr`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`r`.`prefix` AS `Prefix`,`r`.`prefix_len` AS `PrefixLen`,`path`.`origin` AS `Origin`,`r`.`origin_as` AS `Origin_AS`,`path`.`med` AS `MED`,`path`.`local_pref` AS `LocalPref`,`path`.`next_hop` AS `NH`,`path`.`as_path` AS `AS_Path`,`path`.`as_path_count` AS `ASPath_Count`,`path`.`community_list` AS `Communities`,`path`.`ext_community_list` AS `ExtCommunities`,`path`.`cluster_list` AS `ClusterList`,`path`.`aggregator` AS `Aggregator`,`p`.`peer_addr` AS `PeerAddress`,`p`.`peer_as` AS `PeerASN`,`r`.`isIPv4` AS `isIPv4`,`p`.`isIPv4` AS `isPeerIPv4`,`p`.`isL3VPNpeer` AS `isPeerVPN`,`r`.`timestamp` AS `LastModified`,`r`.`first_added_timestamp` AS `FirstAddedTimestamp`,`r`.`prefix_bin` AS `prefix_bin`,`r`.`path_id` AS `path_id`,`r`.`labels` AS `labels`,`r`.`hash_id` AS `rib_hash_id`,`r`.`path_attr_hash_id` AS `path_hash_id`,`r`.`peer_hash_id` AS `peer_hash_id`,`rtr`.`hash_id` AS `router_hash_id`,`r`.`isWithdrawn` AS `isWithdrawn`,`r`.`prefix_bits` AS `prefix_bits`,`r`.`isPrePolicy` AS `isPrePolicy`,`r`.`isAdjRibIn` AS `isAdjRibIn` from (((`bgp_peers` `p` join `rib` `r` on(`r`.`peer_hash_id` = `p`.`hash_id`)) join `path_attrs` `path` on(`path`.`hash_id` = `r`.`path_attr_hash_id` and `path`.`peer_hash_id` = `r`.`peer_hash_id`)) join `routers` `rtr` on(`p`.`router_hash_id` = `rtr`.`hash_id`)) where `r`.`isWithdrawn` = 0 */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_routes_history`
--

/*!50001 DROP VIEW IF EXISTS `v_routes_history`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_routes_history` AS select if(length(`rtr`.`name`) > 0,`rtr`.`name`,`rtr`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`pathlog`.`prefix` AS `Prefix`,`pathlog`.`prefix_len` AS `PrefixLen`,`path`.`origin` AS `Origin`,`path`.`origin_as` AS `Origin_AS`,`path`.`med` AS `MED`,`path`.`local_pref` AS `LocalPref`,`path`.`next_hop` AS `NH`,`path`.`as_path` AS `AS_Path`,`path`.`as_path_count` AS `ASPath_Count`,`path`.`community_list` AS `Communities`,`path`.`ext_community_list` AS `ExtCommunities`,`path`.`cluster_list` AS `ClusterList`,`path`.`aggregator` AS `Aggregator`,`p`.`peer_addr` AS `PeerAddress`,`p`.`peer_as` AS `PeerASN`,`p`.`isIPv4` AS `isPeerIPv4`,`p`.`isL3VPNpeer` AS `isPeerVPN`,`pathlog`.`id` AS `id`,`pathlog`.`timestamp` AS `LastModified`,`pathlog`.`path_attr_hash_id` AS `path_attr_hash_id`,`pathlog`.`peer_hash_id` AS `peer_hash_id`,`rtr`.`hash_id` AS `router_hash_id` from (((`path_attr_log` `pathlog` straight_join `path_attrs` `path` on(`pathlog`.`path_attr_hash_id` = `path`.`hash_id` and `pathlog`.`peer_hash_id` = `path`.`peer_hash_id`)) straight_join `bgp_peers` `p` on(`pathlog`.`peer_hash_id` = `p`.`hash_id`)) straight_join `routers` `rtr` on(`p`.`router_hash_id` = `rtr`.`hash_id`)) order by `pathlog`.`id` desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;

--
-- Final view structure for view `v_routes_withdraws`
--

/*!50001 DROP VIEW IF EXISTS `v_routes_withdraws`*/;
/*!50001 SET @saved_cs_client          = @@character_set_client */;
/*!50001 SET @saved_cs_results         = @@character_set_results */;
/*!50001 SET @saved_col_connection     = @@collation_connection */;
/*!50001 SET character_set_client      = utf8 */;
/*!50001 SET character_set_results     = utf8 */;
/*!50001 SET collation_connection      = utf8_general_ci */;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`openbmp`@`localhost` SQL SECURITY DEFINER */
/*!50001 VIEW `v_routes_withdraws` AS select if(length(`rtr`.`name`) > 0,`rtr`.`name`,`rtr`.`ip_address`) AS `RouterName`,if(length(`p`.`name`) > 0,`p`.`name`,`p`.`peer_addr`) AS `PeerName`,`log`.`prefix` AS `Prefix`,`log`.`prefix_len` AS `PrefixLen`,`path`.`origin` AS `Origin`,`path`.`origin_as` AS `Origin_AS`,`path`.`med` AS `MED`,`path`.`local_pref` AS `LocalPref`,`path`.`next_hop` AS `NH`,`path`.`as_path` AS `AS_Path`,`path`.`as_path_count` AS `ASPath_Count`,`path`.`community_list` AS `Communities`,`path`.`ext_community_list` AS `ExtCommunities`,`path`.`cluster_list` AS `ClusterList`,`path`.`aggregator` AS `Aggregator`,`p`.`peer_addr` AS `PeerAddress`,`p`.`peer_as` AS `PeerASN`,`p`.`isIPv4` AS `isPeerIPv4`,`p`.`isL3VPNpeer` AS `isPeerVPN`,`log`.`id` AS `id`,`log`.`timestamp` AS `LastModified`,`log`.`path_attr_hash_id` AS `path_attr_hash_id`,`log`.`peer_hash_id` AS `peer_hash_id`,`rtr`.`hash_id` AS `router_hash_id` from (((`withdrawn_log` `log` join `bgp_peers` `p` on(`log`.`peer_hash_id` = `p`.`hash_id`)) join `path_attrs` `path` on(`path`.`hash_id` = `log`.`path_attr_hash_id`)) join `routers` `rtr` on(`p`.`router_hash_id` = `rtr`.`hash_id`)) order by `log`.`timestamp` desc */;
/*!50001 SET character_set_client      = @saved_cs_client */;
/*!50001 SET character_set_results     = @saved_cs_results */;
/*!50001 SET collation_connection      = @saved_col_connection */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-10-25  9:51:41
